$my-var: 5px;

.my-class{
    top: $my-var;
    $my-var2: red;
    color: $my-var2;
}

// variáveis globais x variáveis por escopo
/*
    Por padrão, todas variáveis definidas foras de qualquer seletor, são consideradas globais.
    Isso significa que elas podem ser acessíveis em qualquer lugar da folha de estilo.
    Por exemplo, eis uma variável global: $my-var: 5px;

    Por outro lado, variáveis locais são aquelas declaradas dentro de um seletor.
    Aqui, definimos uma mixin e então a variável $my-var2 dentro.
    Essa variável é local e, assim, visível apenas para o código dentro da mixin.

*/


// Tipos de Dados

/*

Booleans - São simplesmente os valores “true” e “false”.

Colors - São aqueles valores para indicar cores, como RGB (rbg(25,15,35)) ou
hexadecimal (#1E79A2).

Null - Apenas indica o valor null, que podemos usar caso algo não esteja
presente em nosso código Sass.

Numbers - São os valores que indicamos com dígitos, mesmo se estiverem com
alguma unidade de medida, como 35, 12px, 83%, etc.

Strings - São todos os valores restantes que não se encaixam nas categorias
anteriores, como nome de classes e nome de fontes.

Lists e Maps - São como os Arrays presentes em linguagens de programação.
*/


// Usando as funções

/*

Color
    mix()
        mix($color1, $color2, $weight: 50%) //=> color
        Returns a number that’s a mixture of $color1 and $color2.

        Both the $weight and the relative opacity of each color determines how
        much of each color is in the result. The $weight must be a number
        between 0% and 100% (inclusive). A larger weight indicates that more of
        $color1 should be used, and a smaller weight indicates that more of $color2
        should be used.

        color.mix(#036, #d2e1dd); // #698aa2
        color.mix(#036, #d2e1dd, 75%); // #355f84
        color.mix(#036, #d2e1dd, 25%); // #9eb6bf
        color.mix(rgba(242, 236, 228, 0.5), #6b717f); // rgba(141, 144, 152, 0.75)

    darker()
        darken($color, $amount) //=> color
        Makes $color darker.

            // #036 has lightness 20%, so when darken() subtracts 30% it just returns black.
            darken(#036, 30%); // black

Number
    percentage()
        percentage($number) //=> number
        Converts a unitless $number (usually a decimal between 0 and 1) to a percentage.
        This function is identical to $number * 100%.

            math.percentage(0.2); // 20%
            math.percentage(100px / 50px); // 200%


    round()
        round($number) //=> number
        Rounds $number to the nearest whole number.

            math.round(4); // 4
            math.round(4.2); // 4
            math.round(4.9); // 5


https://sass-lang.com/documentation/modules
*/

// Lists e Maps

// list - qualquer conjunto de valores que pode ser separado por espaço ou vírgula
// o primeiro índice é o 1 e não o 0
$my-list: 35px 15px 80% 41rem;
//$my-list: 35px, 15px, 80%, 41rem;

.container{
    margin: $my-list;
    top: nth($my-list, 1); // 35px
}


//map - indica o nome, não armazena valors de acordo com o índice
$my-map: (
    demo: #FF0000;
    paid: #00FF00;
);

.box{
    color: map-get($color, demo);
}



// Desafio

// cor final em .my-class tem quer ser roxo
$my-colors: red green blue;

.my-class{
    color: mix( nth($my-colors, 1), nth($my-colors, 3));
    //color: purple;
}
